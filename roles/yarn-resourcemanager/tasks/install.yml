---
- name: check if the container exists
  shell: docker inspect hadoop-yarn-resourcemanager 2>&1
  ignore_errors: yes
  register: container

- name: make sure the container exists
  shell: >
    docker run
    -d
    -p 8030:8030
    -p 8031:8031
    -p 8032:8032
    -p 8033:8033
    -p 8088:8088
    --net=host
    --name hadoop-yarn-resourcemanager
    --expose 8030
    --expose 8031
    --expose 8032
    --expose 8033
    --expose 8088
    --volume /data/{{ tint.owner }}/{{ tint.id }}/config:${HADOOP_PREFIX}/etc/hadoop
    --volume /data/{{ tint.owner }}/{{ tint.id }}/data/yarn/rm:/data/hadoop/yarn/rm
    --add-host resourcemanager:{{ hostvars[hosts.resourcemanager]['ansible_eth0']['ipv4']['address']}}
    --add-host namenode:{{ hostvars[hosts.namenode]['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n1:{{hostvars[ansible_local.hex.name + '-n1']['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n2:{{hostvars[ansible_local.hex.name + '-n2']['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n3:{{hostvars[ansible_local.hex.name + '-n3']['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n4:{{hostvars[ansible_local.hex.name + '-n4']['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n5:{{hostvars[ansible_local.hex.name + '-n5']['ansible_eth0']['ipv4']['address']}}
    --add-host {{ ansible_local.hex.name }}-n6:{{hostvars[ansible_local.hex.name + '-n6']['ansible_eth0']['ipv4']['address']}}
    bigboards/hadoop-armv7l $HADOOP_PREFIX/bin/yarn --config $HADOOP_CONF_DIR resourcemanager
  environment:
    USER: "root"
    HADOOP_PREFIX: "/opt/hadoop"
    HADOOP_COMMON_HOME: "/opt/hadoop"
    HADOOP_HDFS_HOME: "/opt/hadoop"
    HADOOP_MAPRED_HOME: "/opt/hadoop"
    HADOOP_YARN_HOME: "/opt/hadoop"
    HADOOP_CONF_DIR: "/opt/hadoop/etc/hadoop"
    YARN_CONF_DIR: "/opt/hadoop/etc/hadoop"
  when: container.stdout.find('"Id":') == -1

- name: make sure the init file is available
  template: src=etc/init/hadoop-yarn-resourcemanager.conf dest=/etc/init/hadoop-yarn-resourcemanager.conf


- name: make sure the service is started at boot
  service: name=hadoop-yarn-resourcemanager enabled=yes state=started